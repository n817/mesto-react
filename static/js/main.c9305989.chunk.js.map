{"version":3,"sources":["contexts/CurrentUserContext.js","images/logo.svg","components/Header.js","utils/api.js","utils/utils.js","components/Card.js","images/edit-button_big.svg","components/Main.js","components/PopupWithForm.js","components/Footer.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","React","createContext","Header","className","src","logo","alt","api","cardsUrl","userUrl","headers","this","_cardsUrl","_userUrl","_headers","_authorization","authorization","fetch","then","_checkResponse","formData","method","body","JSON","stringify","name","username","about","description","avatar","url","cardname","link","methodName","cardId","res","ok","json","Promise","reject","status","Card","card","onCardClick","onCardLike","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","type","aria-label","length","Main","onEditAvatar","onEditProfile","onAddPlace","useState","cards","setCards","handleCardLike","changeLikeCardStatus","newCard","newCards","map","c","useEffect","getInitialCards","catch","err","console","log","id","avatarEditIcon","PopupWithForm","title","buttonText","children","isOpen","onClose","checkOpen","noValidate","Footer","ImagePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCurrentUser","closeAllPopups","getUserInfo","handleEscClose","evt","key","document","addEventListener","removeEventListener","Provider","value","placeholder","required","minLength","maxLength","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c9305989.chunk.js","sourcesContent":["import React from 'react';\nexport const CurrentUserContext = React.createContext();\n","export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header page__section\">\n    <img src={logo} alt=\"Логотип\" className=\"header__logo\"/>\n    </header>\n  );\n}\n\nexport default Header;\n","import { apiSettings } from \"./utils\";\n\nclass Api {\n  constructor({cardsUrl, userUrl, headers}) {\n    this._cardsUrl = cardsUrl;\n    this._userUrl = userUrl;\n    this._headers = headers;\n    this._authorization = headers.authorization;\n  }\n\n  // Получение информации о пользователе с сервера\n  getUserInfo() {\n    return fetch(this._userUrl, {\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  // Загрузка новой информации о пользователе на сервер\n  patchUserInfo(formData) {\n    return fetch(this._userUrl, {\n    method: 'PATCH',\n    headers: this._headers,\n    body: JSON.stringify({\n      name: formData.username,\n      about: formData.description\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  // Загрузка аватара пользователя на сервер\n  patchUserAvatar(formData) {\n    return fetch(`${this._userUrl}/avatar`, {\n    method: 'PATCH',\n    headers: this._headers,\n    body: JSON.stringify({\n      avatar: formData.url,\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  // Получение массива карточек с сервера\n  getInitialCards() {\n    return fetch(this._cardsUrl, {\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  // Загрузка новой карточки на сервер\n  postNewCard(formData) {\n    return fetch(this._cardsUrl, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: formData.cardname,\n        link: formData.url\n        })\n    })\n    .then(this._checkResponse)\n  }\n\n  // Лайк и удаление лайка карточки\n  changeLikeCardStatus({methodName, cardId}) {\n    return fetch(`${this._cardsUrl}/likes/${cardId}`, {\n      method: methodName,\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  // Удаление карточки на сервере\n  deleteCard(cardId) {\n    return fetch(`${this._cardsUrl}/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n}\n\n\n// Создаем экземпляр класса взаимодействия с API сервера\nconst api = new Api(apiSettings);\n\n\nexport default api;\n","const apiSettings = {\n  cardsUrl: 'https://mesto.nomoreparties.co/v1/cohort-22/cards',\n  userUrl: 'https://mesto.nomoreparties.co/v1/cohort-22/users/me',\n  headers: {\n    authorization: '515ca80d-3822-4c04-8086-34127dceee10',\n    'Content-Type': 'application/json'\n  }\n};\n\nexport {apiSettings};\n","import React from 'react';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\nfunction Card({card, onCardClick, onCardLike}) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (`card__trash-button ${isOwn ? 'card__trash-button_active' : ''}`);\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = (`card__like-button ${isLiked ? 'card__like-button_active' : ''}`);;\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  return (\n    <div>\n      <figure className=\"card\">\n        <button className=\"card__image-button\" onClick={handleClick}>\n          <img src={card.link} alt={card.name} className=\"card__image\"/>\n        </button>\n        <figcaption className=\"card__caption\">\n          <p className=\"card__title\">{card.name}</p>\n          <div className=\"card__like-block\">\n            <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick} aria-label=\"Нравится\"></button>\n            <p className=\"card__likes-counter\">{card.likes.length}</p>\n          </div>\n        </figcaption>\n        <button type=\"button\" className={cardDeleteButtonClassName} aria-label=\"Удалить\"></button>\n      </figure>\n    </div>\n  )\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/edit-button_big.a086f758.svg\";","import React from 'react';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport Card from './Card';\nimport avatarEditIcon from '../images/edit-button_big.svg';\n\nfunction Main({onEditAvatar, onEditProfile, onAddPlace, onCardClick}) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [cards, setCards] = React.useState([]);\n\n  // Загружаем карточки с сервера\n  React.useEffect(() => {\n      api.getInitialCards()\n      .then((res) => {\n        setCards(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    }, []);\n\n\n  // Функция-обработчик лайков\n  function handleCardLike(card) {\n\t  // Проверяем, есть ли уже лайк на этой карточке\n\t  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\t  // Отправляем запрос в API и получаем обновлённые данные карточки\n\t  api.changeLikeCardStatus({\n      methodName: `${isLiked ? 'DELETE' : 'PUT'}`,\n      cardId: card._id})\n      .then((newCard) => {\n\t\t// Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n\t  const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n\t  // Обновляем стейт\n\t  setCards(newCards);\n\t});\n}\n\n  return (\n    <main id=\"content\">\n        <section className=\"profile page__section\" aria-label=\"Профиль\">\n          <div className=\"profile__content\">\n            <img src={currentUser.avatar} alt=\"Аватар профиля\" className=\"profile__avatar\"/>\n            <button type=\"button\"  className=\"profile__avatar-edit-button\" onClick={onEditAvatar}>\n              <img src={avatarEditIcon} alt=\"\" className=\"profile__avatar-edit-icon\"/>\n            </button>\n            <div className=\"profile__title\">\n              <h1 id=\"no_id\" className=\"profile__name\">{currentUser.name}</h1>\n              <button type=\"button\" className=\"profile__edit-button\" aria-label=\"Редактировать\" onClick={onEditProfile}></button>\n            </div>\n            <p className=\"profile__description\">{currentUser.about}</p>\n          </div>\n          <button type=\"button\" className=\"profile__add-button\" aria-label=\"Добавить\" onClick={onAddPlace}></button>\n        </section>\n\n        <section className=\"cards page__section\" aria-label=\"Места\">\n\n          {cards.map((card) => (\n            <Card\n              key={card._id}\n              card={card}\n              onCardClick={onCardClick}\n              onCardLike={handleCardLike}/>\n            )\n          )}\n\n        </section>\n      </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction PopupWithForm({name, title, buttonText, children, isOpen, onClose}) {\n  const checkOpen = isOpen ? \"popup_opened\" : \"\";\n\n  return (\n    <section className={`popup popup_type_${name} ${checkOpen}`}>\n      <form className=\"form\" name={name} noValidate>\n        <button type=\"button\" className=\"popup__close-button\" aria-label=\"Закрыть попап\" onClick={onClose}></button>\n        <h2 className=\"form__title\">{title}</h2>\n        {children}\n        <button type=\"submit\" className=\"form__submit-button\">{buttonText}</button>\n      </form>\n    </section>\n  )\n}\n\nexport default PopupWithForm;\n\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer page__section\">\n    <p className=\"footer__content\">&copy; 2021 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction ImagePopup({card, onClose}) {\n  return (\n    <section className={`\n      popup popup_type_zoom\"\n      aria-label=\"Просмотр фотографий\n      ${card.link ? \"popup_opened\" : \"\"}\n      `}>\n      <figure className=\"zoom\">\n        <button type=\"button\" className=\"popup__close-button\" aria-label=\"Закрыть попап\" onClick={onClose}></button>\n        <img src={card.link} alt={card.name} className=\"zoom__image\"/>\n        <figcaption className=\"zoom__caption\">{card.name}</figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport Footer from './Footer';\nimport api from '../utils/api'\nimport '../index.css';\nimport ImagePopup from './ImagePopup';\n\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  function handleEditAvatarClick(){\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick(){\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick(){\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card){\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  // Загружаем данные пользователя с сервера\n  React.useEffect(() => {\n    api.getUserInfo()\n    .then((res) => {\n      setCurrentUser(res);\n      })\n    .catch((err) => {\n       console.log(err);\n      });\n\n  }, []);\n\n\n  // Реализуем закрытие popup кнопкой Esc\n  React.useEffect(() => {\n\n    function handleEscClose(evt) {\n      if (evt.key ==='Escape') {\n        closeAllPopups();\n      }\n    }\n    // Список действий внутри одного хука\n    document.addEventListener('keyup', handleEscClose);\n\n    // Возвращаем функцию, которая удаляет эффекты\n    return () => {\n      document.removeEventListener('keyup', handleEscClose);\n    }\n\n  },[]);\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main onEditAvatar = {handleEditAvatarClick}\n              onEditProfile = {handleEditProfileClick}\n              onAddPlace = {handleAddPlaceClick}\n              onCardClick = {handleCardClick}/>\n        <Footer />\n\n        <PopupWithForm\n          name=\"avatar-edit\"\n          title=\"Обновить аватар\"\n          buttonText=\"Сохранить\"\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}>\n            <label className=\"form__field\">\n            <input type=\"url\" id=\"avatar-input\" className=\"form__input form__input-url\" name=\"url\" placeholder=\"Ссылка на картинку с аватаром\" required/>\n             <span className=\"form__input-error avatar-input-error\"></span>\n            </label>\n        </PopupWithForm>\n\n        <PopupWithForm\n          name=\"profile-edit\"\n          title=\"Редактировать профиль\"\n          buttonText=\"Сохранить\"\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}>\n            <label className=\"form__field\">\n              <input type=\"text\" id=\"username-input\" className=\"form__input\" name=\"username\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required/>\n              <span className=\"form__input-error username-input-error\"></span>\n            </label>\n            <label className=\"form__field\">\n             <input type=\"text\" id=\"description-input\" className=\"form__input\" name=\"description\" placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" required/>\n              <span className=\"form__input-error description-input-error\"></span>\n            </label>\n        </PopupWithForm>\n\n        <PopupWithForm\n          name=\"card-add\"\n          title=\"Новое место\"\n          buttonText=\"Создать\"\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}>\n            <label className=\"form__field\">\n              <input type=\"text\" id=\"title-input\" className=\"form__input\" name=\"cardname\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required/>\n            <span className=\"form__input-error title-input-error\"></span>\n            </label>\n          <label className=\"form__field\">\n              <input type=\"url\" id=\"url-input\" className=\"form__input form__input-url\" name=\"url\" placeholder=\"Ссылка на картинку\" required/>\n              <span className=\"form__input-error url-input-error\"></span>\n          </label>\n        </PopupWithForm>\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}